{"code":"import { ETHER, Price, Token, WETH9 } from '@uniswap/sdk-core';\r\nimport invariant from 'tiny-invariant';\r\nexport class Route {\r\n    constructor(pairs, input, output) {\r\n        invariant(pairs.length > 0, 'PAIRS');\r\n        const chainId = pairs[0].chainId;\r\n        invariant(pairs.every(pair => pair.chainId === chainId), 'CHAIN_IDS');\r\n        const weth = WETH9[chainId];\r\n        invariant((input instanceof Token && pairs[0].involvesToken(input)) ||\r\n            (input === ETHER && weth && pairs[0].involvesToken(weth)), 'INPUT');\r\n        invariant(typeof output === 'undefined' ||\r\n            (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\r\n            (output === ETHER && weth && pairs[pairs.length - 1].involvesToken(weth)), 'OUTPUT');\r\n        const path = [input instanceof Token ? input : weth];\r\n        for (const [i, pair] of pairs.entries()) {\r\n            const currentInput = path[i];\r\n            invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH');\r\n            const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\r\n            path.push(output);\r\n        }\r\n        this.pairs = pairs;\r\n        this.path = path;\r\n        this.input = input;\r\n        this.output = output ?? path[path.length - 1];\r\n    }\r\n    get midPrice() {\r\n        const prices = [];\r\n        for (const [i, pair] of this.pairs.entries()) {\r\n            prices.push(this.path[i].equals(pair.token0)\r\n                ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\r\n                : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw));\r\n        }\r\n        return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0]);\r\n    }\r\n    get chainId() {\r\n        return this.pairs[0].chainId;\r\n    }\r\n}\r\n//# sourceMappingURL=route.js.map","references":["/home/hhl/contract/uniswap/uni-v2-sdk/node_modules/@uniswap/sdk-core/dist/index.d.ts","/home/hhl/contract/uniswap/uni-v2-sdk/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/home/hhl/contract/uniswap/uni-v2-sdk/src/entities/pair.ts"],"map":"{\"version\":3,\"file\":\"route.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/entities/route.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/hhl/contract/uniswap/uni-v2-sdk/entities/route.d.ts","writeByteOrderMark":false,"text":"import { ChainId, Currency, Price, Token } from '@uniswap/sdk-core';\r\nimport { Pair } from './pair';\r\nexport declare class Route {\r\n    readonly pairs: Pair[];\r\n    readonly path: Token[];\r\n    readonly input: Currency;\r\n    readonly output: Currency;\r\n    get midPrice(): Price;\r\n    constructor(pairs: Pair[], input: Currency, output?: Currency);\r\n    get chainId(): ChainId | number;\r\n}\r\n"}}
